{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","image","text","imageViewer","lang","popout","recognize","bind","assertThisInitialized","imageChange","changeLanguage","e","_this2","setState","currentTarget","value","_this3","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","_this4","window","Tesseract","progress","react_default","a","createElement","vkui","catch","err","console","error","then","data","finally","title","textBlock","renderResultBlock","imageBlock","style","textAlign","maxWidth","maxHeight","alt","src","activePanel","id","top","status","placeholder","onChange","accept","size","before","camera_default","React","Component","connect","send","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3536bd74.chunk.js","sourcesContent":["import React from 'react';\nimport {Div, File, FormLayout, Group, Panel, PanelHeader, ScreenSpinner, Select, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: '',\n      text: '',\n      imageViewer: '',\n      lang: 'rus',\n      popout: null\n    };\n\n    this.recognize = this.recognize.bind(this);\n    this.imageChange = this.imageChange.bind(this);\n    this.changeLanguage = this.changeLanguage.bind(this);\n  }\n\n  changeLanguage(e) {\n    this.setState({lang: e.currentTarget.value}, () => this.recognize());\n  }\n\n  imageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let image = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        image,\n        imageViewer: reader.result,\n      }, () => this.recognize());\n    };\n\n    reader.readAsDataURL(image);\n  }\n\n  recognize() {\n    if (!this.state.image || !this.state.lang) {\n      return;\n    }\n\n    window.Tesseract.recognize(this.state.image, {\n        lang: this.state.lang\n      })\n      .progress(() =>\n        this.setState({\n          popout: <ScreenSpinner/>\n        })\n      )\n      .catch(err => console.error(err))\n      .then(data => {\n        this.setState({\n          text: data.text\n        });\n      })\n      .finally(() => {\n        this.setState({\n          popout: null\n        })\n      })\n  }\n\n  renderResultBlock() {\n    if (!this.state.text) {\n      return '';\n    }\n\n    return (\n      <Group title=\"Текст\">\n        <Div>{this.state.text}</Div>\n      </Group>\n    );\n  }\n\n  render() {\n    let textBlock = this.renderResultBlock();\n\n    let imageBlock = this.state.imageViewer ? (<Group title=\"Изображение\">\n      <Div style={{\n        textAlign: 'center',\n      }}>\n        <img style={{\n          maxWidth: '100%',\n          maxHeight: '100%'\n        }} alt=\"Source\" src={this.state.imageViewer}/>\n      </Div>\n    </Group>) : '';\n\n    return (\n      <View popout={this.state.popout} activePanel='main_panel'>\n        <Panel id='main_panel'>\n          <PanelHeader>Распознавание текста</PanelHeader>\n\n          <Group title=\"Настройки\">\n            <FormLayout>\n              <Select top=\"Язык\" status={this.state.lang ? 'valid' : 'error'} placeholder=\"Выберите язык\"\n                      value={this.state.lang} onChange={this.changeLanguage}>\n                <option value=\"eng\">Английский</option>\n                <option value=\"rus\">Русский</option>\n              </Select>\n              <File top=\"Загрузите ваше изображение\" accept=\"image/*\" size=\"xl\" before={<Icon24Camera/>}\n                    onChange={this.imageChange}>\n                Открыть галерею\n              </File>\n            </FormLayout>\n          </Group>\n          {imageBlock}\n          {textBlock}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}